@model IEnumerable<Product>
@{
    ViewData["Title"] = "Tile";
}
<h2>All Products</h2>

<div id="masonry-page">

    @{
        ViewData["Action"] = "Tile";
        ViewData["Controller"] = "Products";
    }
    <partial name="_Filters" />

    <!-- Container for all of the Products -->
    <div id="grid" class="main-content">

        <!-- The following HTML shows different examples of what HTML
            could be rendered based on different rules. For purposes
            of demonstration we've written it out so you can see it
            when you load the page up. -->

        @foreach (Product product in Model)
        {
            <!-- Standard Product -->
            <div class="tile  ">

                <!-- Link to the Detail page using the product id (e.g. Products/Detail/1) -->
                <a class="product-image" asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">
                    <img src="~/images/product-images/@product.ImageName" />
                </a>
                <div class="details">
                    <p class="name"><a asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">@product.Name</a></p>

                    <!-- .filled will make the star solid -->
                    <div class="rating">
                        @{
                            int stars = (int)product.AverageRating;
                            for (int i = 1; i <= 5; i++)
                            {
                                if (stars >= i)
                                {
                                    <span class="filled">&#9734;</span>
                                }
                                else
                                {
                                    <span>&#9734;</span>
                                }
                            }
                        }
                    </div>

                    <p class="price">$@product.Price</p>
                </div>
            </div>

            <!-- Add the .top-seller class if the product is considered a Top Seller -->
            if (product.IsTopSeller)
            {
                <div class="tile top-seller ">

                    <!-- Link to the Detail page using the product id (e.g. Products/Detail/1) -->
                    <a class="product-image" asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">
                        <img src="~/images/product-images/@product.ImageName" />
                    </a>
                    <div class="details">
                        <p class="name"><a href="#">@product.Name</a></p>

                        <!-- .filled will make the star solid -->
                        <div class="rating">
                            @{
                                int stars2 = (int)product.AverageRating;
                                for (int i = 1; i <= 5; i++)
                                {
                                    if (stars2 >= i)
                                    {
                                        <span class="filled">&#9734;</span>
                                    }
                                    else
                                    {
                                        <span>&#9734;</span>
                                    }
                                }
                            }
                        </div>

                        <!-- Add the Top Seller <br/> and product alert
                    if the product is considered a Top Seller -->
                        <br />
                        <p class="product-alert">Top Seller</p>
                        <!--
                        Add the X remaining product alert if the remaining
                        quantity is greater than 0, but less than or equal to 5
                    -->
                        <p class="product-alert">@product.RemainingStock remaining!</p>
                        <p class="price">$@product.Price</p>
                    </div>
                </div>

                <!-- Add the .sold-out class if the Remaining Stock is 0 -->
                <div class="tile  sold-out">
                    <!-- Add the Sold Out banner if the Remaining Stock is 0 -->
                    <span class="banner">Sold Out</span>

                    <!-- Link to the Detail page using the product id (e.g. Products/Detail/1) -->
                    <a class="product-image" asp-controller="Products" asp-action="Detail" asp-route-id="@product.Id">
                        <img src="~/images/product-images/@product.ImageName" />
                    </a>
                    <div class="details">
                        <p class="name"><a href="#">@product.Name</a></p>

                        <!-- .filled will make the star solid -->
                        <div class="rating">
                            @{
                                int stars3 = (int)product.AverageRating;
                                for (int i = 1; i <= 5; i++)
                                {
                                    if (stars3 >= i)
                                    {
                                        <span class="filled">&#9734;</span>
                                    }
                                    else
                                    {
                                        <span>&#9734;</span>
                                    }
                                }
                            }
                        </div>

                        <p class="price">$@product.Price</p>
                    </div>
                </div>
            }

        }
    </div>
</div>